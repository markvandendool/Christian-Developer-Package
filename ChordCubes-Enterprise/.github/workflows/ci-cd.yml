name: ChordCubes CI/CD Pipeline

on:
  push:
    branches: [ main, development, feature/* ]
  pull_request:
    branches: [ main, development ]
  schedule:
    - cron: '0 2 * * 1'  # Run at 2 AM every Monday

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: dist/
        retention-days: 7

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Generate test coverage report
      run: npm run test:coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          coverage/
          cypress/videos/
          cypress/screenshots/
        retention-days: 7

  analyze:
    name: Analyze
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint code
      run: npm run lint
    
    - name: Run security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
    
    - name: Bundle size analysis
      run: |
        npx bundlesize
    
    - name: Upload analysis results
      uses: actions/upload-artifact@v3
      with:
        name: analysis-results
        path: reports/
        retention-days: 7

  deploy-dev:
    name: Deploy to Development
    if: github.event_name == 'push' && (github.ref == 'refs/heads/development' || startsWith(github.ref, 'refs/heads/feature/'))
    needs: [test, analyze]
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: dist
    
    - name: Deploy to development environment
      run: npm run deploy:dev
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}

  deploy-staging:
    name: Deploy to Staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [test, analyze]
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: dist
    
    - name: Deploy to staging environment
      run: npm run deploy:staging
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
    
    - name: Run smoke tests
      run: |
        npm run test:smoke

  deploy-production:
    name: Deploy to Production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: dist
    
    - name: Deploy to production environment
      run: npm run deploy:prod
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
    
    - name: Run post-deployment verification
      run: |
        npm run verify:prod
